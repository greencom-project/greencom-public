# Example configuration 	
# Select overall log level and destination: CONSOLE (testing), FILE or FILES (production)
# ALL > TRACE > DEBUG > INFO > WARN > ERROR > FATAL > OFF
log4j.rootLogger = INFO, FILE

# Enable specific log level for application loggers:
log4j.logger.eu.linksmart = ERROR
log4j.logger.eu.greencom = INFO
log4j.logger.eu.greencom.xgateway = INFO
log4j.logger.eu.greencom.mgmbroker = INFO
log4j.logger.eu.greencom.mgm = INFO

# 3rd party loggers
log4j.logger.org.ops4j.pax = ERROR
log4j.logger.org.apache.http = ERROR
log4j.logger.org.eclipse.jetty = ERROR

# OSGi console
log4j.appender.CONSOLE = org.apache.log4j.ConsoleAppender
log4j.appender.CONSOLE.layout = org.apache.log4j.PatternLayout
log4j.appender.CONSOLE.layout.ConversionPattern = %d %-5p (%C#%M:%L) - %m%n

# Single, size-rotating file 
#log4j.appender.FILE=org.apache.log4j.RollingFileAppender
# Rotation implemented now via logrotate
log4j.appender.FILE=org.apache.log4j.FileAppender
#log4j.appender.FILE.MaxFileSize = 5MB
#log4j.appender.FILE.MaxBackupIndex = 5
#log4j.appender.FILE.File = log/rotating.log
log4j.appender.FILE.File=/home/pi/greencom/log/rotating.log
log4j.appender.FILE.layout = org.apache.log4j.PatternLayout
log4j.appender.FILE.layout.ConversionPattern = %d %-5p (%c) - %m%n